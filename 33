import { Component, EventEmitter, Input, Output } from '@angular/core';
import { CommonModule } from '@angular/common';

export interface BeneficiaireModel {
  id: string;
  nom: string;
  isEnabled: boolean;
  // ajoute d'autres propriétés selon ton besoin
}

@Component({
  selector: 'app-beneficiary-item',
  standalone: true,
  imports: [CommonModule],
  template: `
    <div class="beneficiaries-row hidden-xs"
         [class.even]="even"
         [class.disabled]="!beneficiary.isEnabled">
      <span>{{ beneficiary.nom }}</span>
      <button *ngIf="editMode" (click)="delete()">Supprimer</button>
    </div>
  `
})
export class BeneficiaryItemComponent {
  @Input({ required: true }) beneficiary!: BeneficiaireModel;
  @Input() editMode = false;
  @Input() even = false;

  @Output() onDeleteEvent = new EventEmitter<BeneficiaireModel>();

  delete() {
    this.onDeleteEvent.emit(this.beneficiary);
  }
}


dans le parent

<app-beneficiary-item
  *ngFor="let item of group.list; let even = even"
  [beneficiary]="item"
  [editMode]="editMode"
  [even]="even"
  (onDeleteEvent)="onDelete($event)">
</app-beneficiary-item>
